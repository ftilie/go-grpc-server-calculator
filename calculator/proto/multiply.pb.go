// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: multiply.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MultiplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirstNumber   int32                  `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber  int32                  `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiplyRequest) Reset() {
	*x = MultiplyRequest{}
	mi := &file_multiply_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplyRequest) ProtoMessage() {}

func (x *MultiplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiply_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplyRequest.ProtoReflect.Descriptor instead.
func (*MultiplyRequest) Descriptor() ([]byte, []int) {
	return file_multiply_proto_rawDescGZIP(), []int{0}
}

func (x *MultiplyRequest) GetFirstNumber() int32 {
	if x != nil {
		return x.FirstNumber
	}
	return 0
}

func (x *MultiplyRequest) GetSecondNumber() int32 {
	if x != nil {
		return x.SecondNumber
	}
	return 0
}

type MultiplyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        int32                  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiplyResponse) Reset() {
	*x = MultiplyResponse{}
	mi := &file_multiply_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplyResponse) ProtoMessage() {}

func (x *MultiplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiply_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplyResponse.ProtoReflect.Descriptor instead.
func (*MultiplyResponse) Descriptor() ([]byte, []int) {
	return file_multiply_proto_rawDescGZIP(), []int{1}
}

func (x *MultiplyResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_multiply_proto protoreflect.FileDescriptor

const file_multiply_proto_rawDesc = "" +
	"\n" +
	"\x0emultiply.proto\x12\n" +
	"calculator\"Y\n" +
	"\x0fMultiplyRequest\x12!\n" +
	"\ffirst_number\x18\x01 \x01(\x05R\vfirstNumber\x12#\n" +
	"\rsecond_number\x18\x02 \x01(\x05R\fsecondNumber\"*\n" +
	"\x10MultiplyResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x05R\x06resultB4Z2github.com/ftilie/go-grpc-servers/calculator/protob\x06proto3"

var (
	file_multiply_proto_rawDescOnce sync.Once
	file_multiply_proto_rawDescData []byte
)

func file_multiply_proto_rawDescGZIP() []byte {
	file_multiply_proto_rawDescOnce.Do(func() {
		file_multiply_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_multiply_proto_rawDesc), len(file_multiply_proto_rawDesc)))
	})
	return file_multiply_proto_rawDescData
}

var file_multiply_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_multiply_proto_goTypes = []any{
	(*MultiplyRequest)(nil),  // 0: calculator.MultiplyRequest
	(*MultiplyResponse)(nil), // 1: calculator.MultiplyResponse
}
var file_multiply_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_multiply_proto_init() }
func file_multiply_proto_init() {
	if File_multiply_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_multiply_proto_rawDesc), len(file_multiply_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_multiply_proto_goTypes,
		DependencyIndexes: file_multiply_proto_depIdxs,
		MessageInfos:      file_multiply_proto_msgTypes,
	}.Build()
	File_multiply_proto = out.File
	file_multiply_proto_goTypes = nil
	file_multiply_proto_depIdxs = nil
}
